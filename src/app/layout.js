"use client";

import { Inter } from "next/font/google";
import PropTypes from "prop-types";
import { Provider } from "react-redux";
import { SnackbarProvider } from "notistack";
import { ThemeProvider } from "@mui/material/styles";
import "./globals.css";
import * as React from "react";
import AppBar from "@mui/material/AppBar";
import Box from "@mui/material/Box";
import Drawer from "@mui/material/Drawer";
import List from "@mui/material/List";
import ListItem from "@mui/material/ListItem";
import ListItemText from "@mui/material/ListItemText";
import Toolbar from "@mui/material/Toolbar";
import Typography from "@mui/material/Typography";
import {
  Avatar,
  Grid,
  Menu,
  MenuItem,
  Tooltip,
  useMediaQuery,
  useTheme,
  TextField,
  InputAdornment,
} from "@mui/material";
import InputLabel from "@mui/material/InputLabel";
import FormControl from "@mui/material/FormControl";
import Select from "@mui/material/Select";
import { Search } from "@mui/icons-material";
import Link from "next/link";
import Image from "next/image";
// icons
import MenuIcon from "@mui/icons-material/Menu";
import ListItemButton from "@mui/material/ListItemButton";
import IconButton from "@mui/material/IconButton";
import ListItemIcon from "@mui/material/ListItemIcon";
import DashboardIcon from "@mui/icons-material/Dashboard";
import PeopleAltIcon from "@mui/icons-material/PeopleAlt";
import AssignmentIcon from "@mui/icons-material/Assignment";
import KeyboardArrowDownIcon from "@mui/icons-material/KeyboardArrowDown";
import theme from "../theme";
import store from "../store";

const inter = Inter({ subsets: ["latin"] });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

const drawerWidth = 255;

const settings = ["Profile", "Logout"];

const sidebarlist = [
  { title: "Dashboard", url: "", icon: DashboardIcon },
  { title: "Leads list", url: "leads", icon: AssignmentIcon },
  { title: "User Management", url: "usermanagement", icon: PeopleAltIcon },
];

export default function RootLayout({ children }) {
  const [mobileOpen, setMobileOpen] = React.useState(false);
  // const [activeItem, setActiveItem] = React.useState("");

  const theme = useTheme();
  const isLargeScreen = useMediaQuery(theme.breakpoints.up("sm"));

  const [anchorElUser, setAnchorElUser] = React.useState(null);

  const handleDrawerToggle = () => {
    setMobileOpen(!mobileOpen);
  };

  const handleOpenUserMenu = (event) => {
    setAnchorElUser(event.currentTarget);
  };

  const handleCloseUserMenu = () => {
    setAnchorElUser(null);
  };

  // const handleItemClick = (text) => {
  //   setActiveItem(text);
  // };

  const [selectedProject, setSelectedProject] = React.useState("");

  const handleChange = (event) => {
    setSelectedProject(event.target.value);
  };

  const handleInputChange = (event) => {
    let inputValue = event.target.value;
    inputValue = inputValue.replace(/\D/g, "");
    inputValue = inputValue.slice(0, 10);
    event.target.value = inputValue;
  };

  const drawer = (
    <Grid sx={{ height: "100vh", borderRight: "1px solid lightgrey" }}>
      <Grid
        sx={{
          height: "89px",
          borderBottom: "1px solid 	lightgrey",
          display: "flex",
          justifyContent: "center",
          alignItems: "center",
        }}
      >
        <Grid
          sx={{
            width: "200px",
            height: "50px",
            // border: "1px solid lightgrey",
            display: "flex",
            justifyContent: "center",
            // alignItems: "center",
          }}
        >
          <Link href="/">
            <Image
              src="/Logo.svg"
              alt="Logo"
              objectFit="contain"
              width={120}
              height={60}
            />
          </Link>
        </Grid>
      </Grid>
      <List>
        {sidebarlist.map((item) => (
          <Link key={item.title} href={`/${item.url}`}>
            <ListItem disablePadding>
              <ListItemButton
              // selected={activeItem === item.title}
              // onClick={() => handleItemClick(item.title)}
              // sx={{ backgroundColor: "grey" }}
              >
                <ListItemIcon>
                  {React.createElement(item.icon)}
                  {/* <Image src={item.icon} width={30} height={30} /> */}
                </ListItemIcon>
                <ListItemText primary={item.title} />
              </ListItemButton>
            </ListItem>
          </Link>
        ))}
      </List>
    </Grid>
  );

  const localstorage = null;

  return (
    <Provider store={store}>
      <ThemeProvider theme={theme}>
        <SnackbarProvider maxSnack={3}>
          <html lang="en">
            <body className={inter.className}>
              {localstorage === null ? (
                <>{children}</>
              ) : (
                <Box sx={{ display: "flex" }}>
                  <AppBar
                    position="fixed"
                    sx={{
                      width: { sm: `calc(100% - ${drawerWidth}px)` },
                      ml: { sm: `${drawerWidth}px` },
                      backgroundColor: "white",
                      boxShadow: "none",
                      borderBottom: "1px solid lightgrey",
                      height: isLargeScreen ? "89px" : "89px",
                    }}
                  >
                    <Toolbar
                      sx={{
                        display: "flex",
                        justifyContent: "space-between",
                        height: isLargeScreen ? "89px" : "89px",
                      }}
                    >
                      <IconButton
                        color="black"
                        aria-label="open drawer"
                        edge="start"
                        onClick={handleDrawerToggle}
                        sx={{ mr: 2, display: { sm: "none" } }}
                      >
                        <MenuIcon />
                      </IconButton>
                      {/* <Grid
              sx={{
                width: "60%",
                color: "black",
                // borderRight: "1px solid black",
                height: "100%",
                padding: 0,
                display: "flex",
                alignItems: "center",
                justifyContent: "space-around",
              }}
            >
              <FormControl
                sx={{
                  minWidth: 323,
                  "& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline":
                    {
                      borderRadius: "10px",
                    },
                }}
                size="small"
              >
                <InputLabel
                  id="demo-select-small-label"
                  sx={{ color: "#757575", fontSize: "14px" }}
                >
                  choose one project
                </InputLabel>
                <Select
                  labelId="demo-select-small-label"
                  id="demo-select-small"
                  displayEmpty
                  value={selectedProject}
                  label="choose one project"
                  onChange={handleChange}
                >
                  <MenuItem value={1}>One</MenuItem>
                  <MenuItem value={2}>Two</MenuItem>
                  <MenuItem value={3}>Three</MenuItem>
                </Select>
              </FormControl>
              <TextField
                variant="outlined"
                id="filled-hidden-label-small"
                size="small"
                placeholder="contact number"
                type="tel"
                onChange={handleInputChange}
                sx={{
                  color: "#757575",
                  fontSize: "14px",
                  "& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline":
                    {
                      borderRadius: "10px",
                    },
                }}
                InputProps={{
                  endAdornment: (
                    <InputAdornment position="end">
                      <Search
                        sx={{
                          padding: "3px",
                          borderRadius: "10px",
                          backgroundColor: "#FAB900",
                          marginRight: "-10px",
                          cursor: "pointer",
                          width: "30px",
                          height: "30px",
                        }}
                      />
                    </InputAdornment>
                  ),
                }}
              />
            </Grid> */}
                      <Grid
                        sx={{
                          width: "15%",
                          color: "black",
                          // borderRight: "1px solid lightgrey",
                          // borderLeft: "1px solid lightgrey",
                          height: "100%",
                          padding: 0,
                          display: "flex",
                          justifyContent: "center",
                          flexDirection: "column",
                          alignItems: "center",
                        }}
                      >
                        <Grid
                          sx={{
                            // border: "1px solid black",
                            display: "flex",
                            // flexDirection: "column",
                            alignItems: "center",
                          }}
                        >
                          <Typography variant="h6">Hello,</Typography>
                          <Typography variant="h6">user</Typography>
                        </Grid>
                      </Grid>
                      <Grid
                        sx={{
                          width: "25%",
                          color: "black",
                          height: "100%",
                          padding: 0,
                          display: "flex",
                          justifyContent: "end",
                          alignItems: "center",
                        }}
                      >
                        <Grid
                          sx={{
                            width: "194px",
                            heigth: "43px",
                            border: "1px solid #FAB900",
                            backgroundColor: "rgba(250, 185, 0, 0.2)",
                            borderRadius: "50px",
                            cursor: "pointer",
                            display: "flex",
                            alignItems: "center",
                            justifyContent: "space-between",
                            padding: "1px",
                          }}
                        >
                          <Box sx={{ flexGrow: 0 }}>
                            <Tooltip title="Open settings">
                              <IconButton
                                onClick={handleOpenUserMenu}
                                sx={{ p: "1px" }}
                              >
                                <Avatar
                                  alt="M"
                                  src="/static/images/avatar/2.jpg"
                                />
                              </IconButton>
                            </Tooltip>
                            <Menu
                              sx={{ marginTop: "30px" }}
                              id="menu-appbar"
                              anchorEl={anchorElUser}
                              anchorOrigin={{
                                vertical: "top",
                                horizontal: "right",
                              }}
                              keepMounted
                              transformOrigin={{
                                vertical: "top",
                              }}
                              open={Boolean(anchorElUser)}
                              onClose={handleCloseUserMenu}
                              disableScrollLock
                            >
                              {settings.map((setting) => (
                                <MenuItem
                                  key={setting}
                                  onClick={handleCloseUserMenu}
                                >
                                  <Typography textAlign="center">
                                    {setting}
                                  </Typography>
                                </MenuItem>
                              ))}
                            </Menu>
                          </Box>
                          <Typography>Marco jackson</Typography>
                          <KeyboardArrowDownIcon />
                        </Grid>
                      </Grid>
                    </Toolbar>
                  </AppBar>
                  <Box
                    component="nav"
                    sx={{
                      width: { sm: drawerWidth },
                      flexShrink: { sm: 0 },
                      backgroundColor: "white",
                    }}
                    aria-label="mailbox folders"
                  >
                    <Drawer
                      variant="temporary"
                      open={mobileOpen}
                      onClose={handleDrawerToggle}
                      ModalProps={{
                        keepMounted: true,
                      }}
                      sx={{
                        display: { xs: "block", sm: "none" },
                        "& .MuiDrawer-paper": {
                          boxSizing: "border-box",
                          width: drawerWidth,
                        },
                      }}
                    >
                      {drawer}
                    </Drawer>
                    <Drawer
                      variant="permanent"
                      sx={{
                        display: { xs: "none", sm: "block" },
                        "& .MuiDrawer-paper": {
                          boxSizing: "border-box",
                          width: drawerWidth,
                        },
                      }}
                      open
                    >
                      {drawer}
                    </Drawer>
                  </Box>
                  <Box
                    component="div"
                    sx={{
                      flexGrow: 1,
                      width: { sm: `calc(100% - ${drawerWidth}px)` },
                      backgroundColor: "white",
                    }}
                  >
                    <Toolbar />
                    <Grid
                      sx={{
                        marginTop: "25px",
                        padding: "10px",
                        background: "#FFFCF3",
                      }}
                    >
                      {children}
                    </Grid>
                  </Box>
                </Box>
              )}
            </body>
          </html>
        </SnackbarProvider>
      </ThemeProvider>
    </Provider>
  );
}
